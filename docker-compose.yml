version: '3.9'

services:
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: voltura
      POSTGRES_PASSWORD: voltura
      POSTGRES_DB: voltura
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U voltura']
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    command: ['redis-server', '--save', '60', '1', '--loglevel', 'warning']
    volumes:
      - redis_data:/data
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://voltura:voltura@postgres:5432/voltura?connection_limit=5
      REDIS_URL: redis://redis:6379
      SESSION_DIR: /app/storage/sessions
      DEFAULT_SESSION_ID: primary
      PORT: '4000'
    volumes:
      - whatsapp_sessions:/app/storage/sessions
    healthcheck:
      test: ['CMD-SHELL', 'wget -qO- http://localhost:4000/health || exit 1']
      interval: 15s
      timeout: 5s
      retries: 5
    ports:
      - '4000:4000'

  worker:
    build:
      context: .
      dockerfile: apps/worker/Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://voltura:voltura@postgres:5432/voltura?connection_limit=5
      REDIS_URL: redis://redis:6379
      SESSION_DIR: /app/storage/sessions
      DEFAULT_SESSION_ID: primary
    volumes:
      - whatsapp_sessions:/app/storage/sessions

  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile
    depends_on:
      api:
        condition: service_healthy
    environment:
      PORT: '3000'
      NEXT_PUBLIC_API_BASE_URL: http://localhost:8080/api
    healthcheck:
      test: ['CMD-SHELL', 'wget -qO- http://localhost:3000 || exit 1']
      interval: 15s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:1.27-alpine
    depends_on:
      api:
        condition: service_healthy
      web:
        condition: service_healthy
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - '8080:80'
    healthcheck:
      test: ['CMD-SHELL', 'wget -qO- http://localhost/api/health || exit 1']
      interval: 15s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  redis_data:
  whatsapp_sessions:
